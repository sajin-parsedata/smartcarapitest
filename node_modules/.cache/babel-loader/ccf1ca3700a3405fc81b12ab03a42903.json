{"ast":null,"code":"var _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n;\n\n(function (root, factory) {\n  /* istanbul ignore next */\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if ((typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) === 'object') {\n    module.exports = factory();\n  } else {\n    root.Smartcar = factory();\n  }\n})(this, function () {\n  'use strict';\n  /* eslint-env node */\n\n  var Smartcar = function () {\n    /**\n     * @callback OnComplete\n     * @param {?Error} error - something went wrong in Connect; this\n     * normally indicates that the user denied access to your application or does not\n     * have a connected vehicle\n     * @param {String} code - the authorization code to be exchanged from a\n     * backend sever for an access token\n     * @param {Object} [state] - contains state if it was set on the initial\n     * authorization request\n     */\n\n    /**\n     * Initializes Smartcar class.\n     *\n     * @constructor\n     * @param {Object} options - the SDK configuration object\n     * @param {String} options.clientId - the application's client id\n     * @param {String} options.redirectUri - the registered redirect uri of the\n     * application\n     * @param {String[]} [options.scope] - requested permission scopes\n     * @param {OnComplete} [options.onComplete] - called on completion of Smartcar Connect\n     * @param {Boolean} [options.testMode=false] - launch Smartcar Connect in test mode\n     */\n    function Smartcar(options) {\n      var _this = this;\n\n      _classCallCheck(this, Smartcar); // polyfill String.prototype.startsWith for IE11 support\n      // istanbul ignore next\n\n\n      if (!String.prototype.startsWith) {\n        // eslint-disable-next-line no-extend-native\n        String.prototype.startsWith = function (searchString, position) {\n          position = position || 0;\n          return this.substr(position, searchString.length) === searchString;\n        };\n      } // ensure options are well formed\n\n\n      Smartcar._validateConstructorOptions(options);\n\n      this.clientId = options.clientId;\n      this.redirectUri = options.redirectUri;\n      this.scope = options.scope;\n      this.onComplete = options.onComplete;\n      this.mode = options.testMode === true ? 'test' : 'live';\n      this.responseType = 'code'; // identifier for matching message event and multiple Smartcar instances\n      // it is a string composed of a timestamp and a 8-digit random number\n\n      this.instanceId = new Date().getTime() + String(Math.random()).slice(2, 10); // handler\n\n      this.messageHandler = function (event) {\n        // bail if message from unexpected source\n        if (!_this.redirectUri.startsWith(event.origin)) {\n          return;\n        }\n\n        var message = event.data || {}; // bail if `message.name` is not `SmartcarAuthMessage`\n        // this prevents attempting to handle messages intended for others\n\n        if (message.name !== 'SmartcarAuthMessage') {\n          return;\n        } // bail if `state` is invalid\n\n\n        var stateObject = void 0;\n\n        try {\n          stateObject = JSON.parse(window.atob(message.state));\n        } catch (e) {\n          return;\n        }\n\n        var _stateObject = stateObject,\n            originalState = _stateObject.originalState,\n            instanceId = _stateObject.instanceId; // bail if `instanceId` doesn't match\n\n        if (instanceId !== _this.instanceId) {\n          return;\n        } // if onComplete not specified do nothing, assume developer is conveying\n        // completion information from backend server receiving redirect to front\n        // end (not using onComplete)\n\n\n        if (_this.onComplete) {\n          // if auth errored generate appropriate error else null\n          var generateError = function generateError(error, description) {\n            if (!error) {\n              return null;\n            }\n\n            switch (error) {\n              case 'access_denied':\n                return new Smartcar.AccessDenied(description);\n\n              case 'invalid_subscription':\n                return new Smartcar.InvalidSubscription(description);\n\n              case 'vehicle_incompatible':\n                var params = event.data; // This field will always exist if vehicleInfo is returned\n\n                if (!params.vin) {\n                  return new Smartcar.VehicleIncompatible(description, null);\n                } // These fields are required when vehicleInfo is returned\n\n\n                var vehicleInfo = {\n                  vin: params.vin,\n                  make: params.make,\n                  year: Number(params.year)\n                }; // This field is optional\n\n                if (params.model) {\n                  vehicleInfo.model = params.model;\n                }\n\n                return new Smartcar.VehicleIncompatible(description, vehicleInfo);\n\n              default:\n                return new Error('Unexpected error: ' + error + ' - ' + description);\n            }\n          };\n\n          var err = generateError(message.error, message.errorDescription);\n          /**\n           * Call `onComplete` with parameters even if developer is not using\n           * a Smartcar-hosted redirect. Regardless of if they are using a\n           * Smartcar-hosted redirect they may still want `onComplete` to do\n           * something with message.\n           *\n           * If empty onComplete is passed, parameters will be harmlessly ignored.\n           *\n           * If a developer chooses to pass an `onComplete` expecting these\n           * parameters they must also handle populating the corresponding query\n           * parameters in their redirect uri.\n           */\n\n          _this.onComplete(err, message.code, originalState);\n        }\n      }; // add handler for postMessage event on completion of Smartcar Connect\n\n\n      window.addEventListener('message', this.messageHandler);\n    }\n    /**\n     * Validate options passed to Smartcar constructor.\n     *\n     * See constructor documentation for enumeration of options properties.\n     *\n     * @private\n     * @param {Object} options - the SDK configuration object\n     */\n\n\n    _createClass(Smartcar, [{\n      key: 'getAuthUrl',\n\n      /**\n       * Generates Smartcar OAuth URL.\n       *\n       * @param {Object} options - the link configuration object\n       * @param {String} [options.state] - arbitrary state passed to redirect uri\n       * @param {Boolean} [options.forcePrompt=false] - force permission approval\n       * screen to show on every authentication, even if the user has previously\n       * consented to the exact scope of permission\n       * @param {String} [options.vehicleInfo.make] - `vehicleInfo` is an\n       * object with an optional property `make`, which allows users to bypass the\n       * car brand selection screen. For a complete list of supported brands, please\n       * see our [API Reference](https://smartcar.com/docs/api#authorization)\n       * documentation.\n       * @param {Boolean|Object} [options.singleSelect] - An optional value that sets the\n       * behavior of the grant dialog displayed to the user. If set to `true`,\n       * `single_select` limits the user to selecting only one vehicle. If `single_select`\n       * is passed in as an object with the property `vin`, Smartcar will only authorize\n       * the vehicle with the specified VIN. See the\n       * [API reference](https://smartcar.com/docs/api/#connect-match)\n       * for more information.\n       * @param {String[]} [options.flags] - An optional space-separated list of feature\n       * flags that your application has early access to.\n       *\n       * @return {String} Connect URL to redirect user to.\n       *\n       * @example\n       * https://connect.smartcar.com/oauth/authorize?\n       * response_type=code\n       * &client_id=8229df9f-91a0-4ff0-a1ae-a1f38ee24d07\n       * &scope=read_odometer read_vehicle_info\n       * &redirect_uri=https://example.com/home\n       * &state=0facda3319\n       * &make=TESLA\n       * &single_select=true\n       * &single_select_vin=5YJSA1E14FF101307\n       * &flags=country:DE color:00819D\n       */\n      value: function getAuthUrl(options) {\n        options = options || {};\n        var link = '';\n        link += 'https://connect.smartcar.com/oauth/authorize';\n        link += '?response_type=' + this.responseType;\n        link += '&client_id=' + this.clientId;\n        link += '&redirect_uri=' + encodeURIComponent(this.redirectUri); // map forcePrompt to approvalPrompt, two options: 'force' and 'auto'\n\n        var forcePrompt = options.forcePrompt === true;\n        link += '&approval_prompt=' + (forcePrompt ? 'force' : 'auto'); // If scope is not specified, Smartcar will default to requesting all scopes\n        // from the user\n\n        if (this.scope) {\n          link += '&scope=' + encodeURIComponent(this.scope.join(' '));\n        }\n\n        link += '&mode=' + this.mode;\n\n        if (options.singleSelect !== undefined && options.singleSelect !== null) {\n          var singleSelectParamAdded = false;\n\n          if (_typeof(options.singleSelect) === 'object') {\n            var availableParams = ['vin'];\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n              for (var _iterator = availableParams[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var param = _step.value;\n\n                if (param in options.singleSelect) {\n                  link += '&single_select_' + param + '=' + options.singleSelect[param];\n                  singleSelectParamAdded = true;\n                }\n              }\n            } catch (err) {\n              _didIteratorError = true;\n              _iteratorError = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                  _iterator.return();\n                }\n              } finally {\n                if (_didIteratorError) {\n                  throw _iteratorError;\n                }\n              }\n            }\n\n            if (!singleSelectParamAdded) {\n              link += '&single_select=false';\n            } else {\n              link += '&single_select=true';\n            }\n          } else {\n            link += '&single_select=' + (options.singleSelect === true);\n          }\n        } // augment state to track the corresponding instance\n\n\n        var state = {\n          instanceId: this.instanceId\n        };\n\n        if (options.state) {\n          state.originalState = options.state;\n        } // convert the augmented state to a base64 string\n\n\n        link += '&state=' + window.btoa(JSON.stringify(state));\n\n        if (options.vehicleInfo) {\n          var _availableParams = ['make'];\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = _availableParams[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var _param = _step2.value;\n\n              if (_param in options.vehicleInfo) {\n                link += '&' + _param + '=' + encodeURIComponent(options.vehicleInfo[_param]);\n              }\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n        }\n\n        if (options.flags) {\n          link += '&flags=' + encodeURIComponent(options.flags.join(' '));\n        }\n\n        return link;\n      }\n      /**\n       * Launches Smartcar Connect in a new window.\n       *\n       * @param {Object} options - the link configuration object\n       * @param {String} [options.state] - arbitrary state passed to redirect uri\n       * @param {Boolean} [options.forcePrompt=false] - force permission approval\n       * screen to show on every authentication, even if the user has previously\n       * consented to the exact scope of permission\n       * @param {String} [options.vehicleInfo.make] - `vehicleInfo` is an\n       * object with an optional property `make`, which allows users to bypass the\n       * car brand selection screen. For a complete list of supported makes, please\n       * see our [API Reference](https://smartcar.com/docs/api#authorization)\n       * documentation.\n       * @param {Boolean|Object} [options.singleSelect] - An optional value that sets the\n       * behavior of the grant dialog displayed to the user. If set to `true`,\n       * `single_select` limits the user to selecting only one vehicle. If `single_select`\n       * is passed in as an object with the property `vin`, Smartcar will only authorize\n       * the vehicle with the specified VIN. See the\n       * [API reference](https://smartcar.com/docs/api/#connect-match)\n       * for more information.\n       * @param {Object} [options.windowOptions] - the position and dimension settings\n       * of the popup window\n       * @param {String} [options.windowOptions.top] - the top property of\n       * [window features](https://developer.mozilla.org/en-US/docs/Web/API/Window/open#Window_features)\n       * @param {String} [options.windowOptions.left] - the left property of\n       * [window features](https://developer.mozilla.org/en-US/docs/Web/API/Window/open#Window_features)\n       * @param {String} [options.windowOptions.width] - the width property of\n       * [window features](https://developer.mozilla.org/en-US/docs/Web/API/Window/open#Window_features)\n       * @param {String} [options.windowOptions.height] - the height property of\n       * [window features](https://developer.mozilla.org/en-US/docs/Web/API/Window/open#Window_features)\n       */\n\n    }, {\n      key: 'openDialog',\n      value: function openDialog(options) {\n        var windowOptions = Smartcar._getWindowOptions(options.windowOptions || {});\n\n        var href = this.getAuthUrl(options);\n        window.open(href, 'Connect your car', windowOptions);\n      }\n      /**\n       * Adds an on-click event listener to the element with the provided id.\n       *\n       * On-click event calls openDialog when the specified element is clicked.\n       *\n       * @param {Object} options - clickHandler configuration object\n       * @param {String} [options.id] - id of the element to add click handler to\n       * @param {String} [options.selector] - css selector of the element(s) to add click handler to\n       * @param {String} [options.state] - arbitrary state passed to redirect uri\n       * @param {Boolean} [options.forcePrompt=false] - force permission approval\n       * screen to show on every authentication, even if the user has previously\n       * consented to the exact scope of permission\n       * @param {String} [options.vehicleInfo.make] - `vehicleInfo` is an\n       * object with an optional property `make`, which allows users to bypass the\n       * car brand selection screen. For a complete list of supported makes, please\n       * see our [API Reference](https://smartcar.com/docs/api#authorization)\n       * documentation.\n       * @param {Boolean|Object} [options.singleSelect] - An optional value that sets the\n       * behavior of the grant dialog displayed to the user. If set to `true`,\n       * `single_select` limits the user to selecting only one vehicle. If `single_select`\n       * is passed in as an object with the property `vin`, Smartcar will only authorize\n       * the vehicle with the specified VIN. See the\n       * [API reference](https://smartcar.com/docs/api/#connect-match)\n       * for more information.\n       */\n\n    }, {\n      key: 'addClickHandler',\n      value: function addClickHandler(options) {\n        var _this2 = this;\n\n        var id = options.id,\n            selector = options.selector; // check if id or selector option exists\n\n        if (!id && !selector) {\n          throw new Error('Could not add click handler: id or selector must be provided.');\n        } // find all the DOM elements that match the id and selector\n\n\n        var elements = [];\n\n        if (id) {\n          var element = document.getElementById(id);\n\n          if (element) {\n            elements.push(element);\n          }\n        }\n\n        if (selector) {\n          elements.push.apply(elements, _toConsumableArray(document.querySelectorAll(selector)));\n        }\n\n        if (!elements.length) {\n          throw new Error('\\n        Could not add click handler: element with \\'' + (id || selector) + '\\' was not found.\\n      ');\n        } // _elementToClickHandler stores all the element - clickHandler pairs under the same instance\n        // because it is possible to call addClickHandler multiple times with different options\n\n\n        if (!this._elementToClickHandler) {\n          this._elementToClickHandler = new Map();\n        }\n\n        var clickHandler = function clickHandler() {\n          _this2.openDialog(options); // this is equivalent to calling:\n          // event.preventDefault();\n          // event.stopPropogation();\n\n\n          return false;\n        };\n\n        elements.forEach(function (element) {\n          // register element - clickHandler pair\n          _this2._elementToClickHandler.set(element, clickHandler); // register eventListener\n\n\n          element.addEventListener('click', clickHandler);\n        });\n      }\n      /**\n       * Remove Smartcar's event listeners.\n       *\n       * 1. remove listener on the global window object:\n       * The Smartcar SDK uses a global 'message' event listener to recieve the\n       * authorization code from the pop-up dialog. Call this method to remove the\n       * event listener from the global window.\n       *\n       * 2. remove click event listeners on DOM elements\n       * The Smartcar SDK also provides an `addClickHandler` method to attach click\n       * events to DOM elements. These event listeners will also be removed by calling\n       * this `unmount` method.\n       */\n\n    }, {\n      key: 'unmount',\n      value: function unmount() {\n        window.removeEventListener('message', this.messageHandler);\n\n        if (this._elementToClickHandler) {\n          var _iteratorNormalCompletion3 = true;\n          var _didIteratorError3 = false;\n          var _iteratorError3 = undefined;\n\n          try {\n            for (var _iterator3 = this._elementToClickHandler.entries()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n              var _ref = _step3.value;\n\n              var _ref2 = _slicedToArray(_ref, 2);\n\n              var element = _ref2[0];\n              var clickHandler = _ref2[1];\n              element.removeEventListener('click', clickHandler);\n            }\n          } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                _iterator3.return();\n              }\n            } finally {\n              if (_didIteratorError3) {\n                throw _iteratorError3;\n              }\n            }\n          }\n        }\n      }\n    }], [{\n      key: '_validateConstructorOptions',\n      value: function _validateConstructorOptions(options) {\n        if (!options.clientId) {\n          throw new TypeError('A client ID option must be provided');\n        }\n\n        if (!options.redirectUri) {\n          throw new TypeError('A redirect URI option must be provided');\n        }\n\n        if (options.redirectUri.startsWith('https://javascript-sdk.smartcar.com')) {\n          // require onComplete method with at least two parameters (error & code)\n          // when hosting on Smartcar CDN\n          if (!options.onComplete || options.onComplete.length < 2) {\n            throw new Error(\"When using Smartcar's CDN redirect an onComplete function with at\" + ' least 2 parameters (error & code) is required to handle' + ' completion of Connect');\n          }\n\n          var usesOldUriScheme = /redirect-[0-9]+\\.[0-9]+\\.[0-9]+\\?/.test(options.redirectUri);\n\n          if (usesOldUriScheme) {\n            // eslint-disable-next-line no-console\n            console.warn(\"\\nThe Smartcar redirect URI you're using is outdated! To update it, please see:\\nhttps://smartcar.com/docs/guides/new-redirect-uri\\n\");\n          }\n        }\n      }\n      /**\n       * Calculate popup window size and position based on current window settings.\n       *\n       * @param {Object} options - the postion and dimention setting of the popup window\n       * @param {String|Number} [options.top] - the top property of\n       * [window features](https://developer.mozilla.org/en-US/docs/Web/API/Window/open#Window_features)\n       * @param {String|Number} [options.left] - the left property of\n       * [window features](https://developer.mozilla.org/en-US/docs/Web/API/Window/open#Window_features)\n       * @param {String|Number} [options.width] - the width property of\n       * [window features](https://developer.mozilla.org/en-US/docs/Web/API/Window/open#Window_features)\n       * the minimum required value is 100.\n       * @param {String|Number} [options.height] - the height property of\n       * [window features](https://developer.mozilla.org/en-US/docs/Web/API/Window/open#Window_features)\n       * the minimum required value is 100.\n       * @private\n       * @return {String} a string of window settings\n       */\n\n    }, {\n      key: '_getWindowOptions',\n      value: function _getWindowOptions(windowOptions) {\n        Object.keys(windowOptions).forEach(function (option) {\n          var numValue = parseFloat(windowOptions[option]);\n\n          if (isNaN(numValue)) {\n            windowOptions[option] = '';\n          } else if (numValue < 100 && (option === 'width' || option === 'height')) {\n            windowOptions[option] = '100';\n          } else {\n            windowOptions[option] = String(numValue);\n          }\n        }); // Sets default popup window size as percentage of screen size\n        // Note that this only applies to desktop browsers\n\n        var windowSettings = {\n          width: window.screen.width * 0.3,\n          height: window.screen.height * 0.75\n        };\n        var widthOffset = (window.outerWidth - windowSettings.width) / 2;\n        var heightOffset = (window.outerHeight - windowSettings.height) / 8;\n        var options = '';\n        options += 'top=' + (windowOptions.top || window.screenY + heightOffset) + ',';\n        options += 'left=' + (windowOptions.left || window.screenX + widthOffset) + ',';\n        options += 'width=' + (windowOptions.width || windowSettings.width) + ',';\n        options += 'height=' + (windowOptions.height || windowSettings.height) + ',';\n        return options;\n      }\n    }]);\n\n    return Smartcar;\n  }();\n  /**\n   * Access denied error returned by Connect.\n   *\n   * @extends Error\n   */\n\n\n  Smartcar.AccessDenied = function (_Error) {\n    _inherits(_class, _Error);\n    /**\n     * @param {String} message - detailed error description\n     */\n\n\n    function _class(message) {\n      _classCallCheck(this, _class);\n\n      var _this3 = _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).call(this, message));\n\n      _this3.name = 'AccessDenied';\n      return _this3;\n    }\n\n    return _class;\n  }(Error);\n  /**\n   * Vehicle incompatible error returned by Connect. Will optionally\n   * have a vehicleInfo object if the user chooses to give permissions to provide\n   * that information. See our [Connect documentation](https://smartcar.com/docs/api#smartcar-connect)\n   * for more details.\n   *\n   * @extends Error\n   */\n\n\n  Smartcar.VehicleIncompatible = function (_Error2) {\n    _inherits(_class2, _Error2);\n    /**\n     * @param {String} message - detailed error description\n     * @param {?Object} vehicleInfo - If a vehicle is incompatible, the user has\n     * the option to return vehicleInfo to the application.\n     * @param {String} vehicleInfo.vin - returned if user gives permission.\n     * @param {String} vehicleInfo.make - returned if user gives permission.\n     * @param {Number} vehicleInfo.year - returned if user gives permission.\n     * @param {String} [vehicleInfo.model] - optionally returned if user gives permission.\n     */\n\n\n    function _class2(message, vehicleInfo) {\n      _classCallCheck(this, _class2);\n\n      var _this4 = _possibleConstructorReturn(this, (_class2.__proto__ || Object.getPrototypeOf(_class2)).call(this, message));\n\n      _this4.name = 'VehicleIncompatible';\n      _this4.vehicleInfo = vehicleInfo;\n      return _this4;\n    }\n\n    return _class2;\n  }(Error);\n  /**\n   * Invalid subscription error returned by Connect.\n   *\n   * @extends Error\n   */\n\n\n  Smartcar.InvalidSubscription = function (_Error3) {\n    _inherits(_class3, _Error3);\n    /**\n     * @param {String} message - detailed error description\n     */\n\n\n    function _class3(message) {\n      _classCallCheck(this, _class3);\n\n      var _this5 = _possibleConstructorReturn(this, (_class3.__proto__ || Object.getPrototypeOf(_class3)).call(this, message));\n\n      _this5.name = 'InvalidSubscription';\n      return _this5;\n    }\n\n    return _class3;\n  }(Error);\n\n  return Smartcar;\n});","map":{"version":3,"sources":["/Users/sajinsamuel/smartcarAPI/getting-started-javascript-sdk-react/app/node_modules/@smartcar/auth/dist/npm/sdk.js"],"names":["_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","value","length","err","Array","isArray","Object","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","Constructor","protoProps","staticProps","prototype","_typeof","obj","constructor","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","_toConsumableArray","arr2","from","_classCallCheck","instance","root","factory","define","amd","exports","module","Smartcar","options","_this","String","startsWith","searchString","position","substr","_validateConstructorOptions","clientId","redirectUri","scope","onComplete","mode","testMode","responseType","instanceId","Date","getTime","Math","random","slice","messageHandler","event","origin","message","data","name","stateObject","JSON","parse","window","atob","state","e","_stateObject","originalState","generateError","error","description","AccessDenied","InvalidSubscription","params","vin","VehicleIncompatible","vehicleInfo","make","year","Number","model","Error","errorDescription","code","addEventListener","getAuthUrl","link","encodeURIComponent","forcePrompt","join","singleSelect","singleSelectParamAdded","availableParams","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","param","return","btoa","stringify","_availableParams","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_param","flags","openDialog","windowOptions","_getWindowOptions","href","open","addClickHandler","_this2","id","selector","elements","element","document","getElementById","apply","querySelectorAll","_elementToClickHandler","Map","clickHandler","forEach","set","unmount","removeEventListener","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","entries","_step3","_ref","_ref2","usesOldUriScheme","test","console","warn","keys","option","numValue","parseFloat","isNaN","windowSettings","width","screen","height","widthOffset","outerWidth","heightOffset","outerHeight","top","screenY","left","screenX","_Error","_class","_this3","getPrototypeOf","_Error2","_class2","_this4","_Error3","_class3","_this5"],"mappings":"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","sourcesContent":["var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n;(function (root, factory) {\n  /* istanbul ignore next */\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if ((typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) === 'object') {\n    module.exports = factory();\n  } else {\n    root.Smartcar = factory();\n  }\n})(this, function () {\n  'use strict';\n\n  /* eslint-env node */\n\n  var Smartcar = function () {\n    /**\n     * @callback OnComplete\n     * @param {?Error} error - something went wrong in Connect; this\n     * normally indicates that the user denied access to your application or does not\n     * have a connected vehicle\n     * @param {String} code - the authorization code to be exchanged from a\n     * backend sever for an access token\n     * @param {Object} [state] - contains state if it was set on the initial\n     * authorization request\n     */\n\n    /**\n     * Initializes Smartcar class.\n     *\n     * @constructor\n     * @param {Object} options - the SDK configuration object\n     * @param {String} options.clientId - the application's client id\n     * @param {String} options.redirectUri - the registered redirect uri of the\n     * application\n     * @param {String[]} [options.scope] - requested permission scopes\n     * @param {OnComplete} [options.onComplete] - called on completion of Smartcar Connect\n     * @param {Boolean} [options.testMode=false] - launch Smartcar Connect in test mode\n     */\n    function Smartcar(options) {\n      var _this = this;\n\n      _classCallCheck(this, Smartcar);\n\n      // polyfill String.prototype.startsWith for IE11 support\n      // istanbul ignore next\n      if (!String.prototype.startsWith) {\n        // eslint-disable-next-line no-extend-native\n        String.prototype.startsWith = function (searchString, position) {\n          position = position || 0;\n          return this.substr(position, searchString.length) === searchString;\n        };\n      }\n\n      // ensure options are well formed\n      Smartcar._validateConstructorOptions(options);\n\n      this.clientId = options.clientId;\n      this.redirectUri = options.redirectUri;\n      this.scope = options.scope;\n      this.onComplete = options.onComplete;\n      this.mode = options.testMode === true ? 'test' : 'live';\n      this.responseType = 'code';\n      // identifier for matching message event and multiple Smartcar instances\n      // it is a string composed of a timestamp and a 8-digit random number\n      this.instanceId = new Date().getTime() + String(Math.random()).slice(2, 10);\n\n      // handler\n      this.messageHandler = function (event) {\n        // bail if message from unexpected source\n        if (!_this.redirectUri.startsWith(event.origin)) {\n          return;\n        }\n\n        var message = event.data || {};\n        // bail if `message.name` is not `SmartcarAuthMessage`\n        // this prevents attempting to handle messages intended for others\n        if (message.name !== 'SmartcarAuthMessage') {\n          return;\n        }\n\n        // bail if `state` is invalid\n        var stateObject = void 0;\n        try {\n          stateObject = JSON.parse(window.atob(message.state));\n        } catch (e) {\n          return;\n        }\n\n        var _stateObject = stateObject,\n            originalState = _stateObject.originalState,\n            instanceId = _stateObject.instanceId;\n        // bail if `instanceId` doesn't match\n\n        if (instanceId !== _this.instanceId) {\n          return;\n        }\n\n        // if onComplete not specified do nothing, assume developer is conveying\n        // completion information from backend server receiving redirect to front\n        // end (not using onComplete)\n        if (_this.onComplete) {\n          // if auth errored generate appropriate error else null\n          var generateError = function generateError(error, description) {\n            if (!error) {\n              return null;\n            }\n\n            switch (error) {\n              case 'access_denied':\n                return new Smartcar.AccessDenied(description);\n              case 'invalid_subscription':\n                return new Smartcar.InvalidSubscription(description);\n              case 'vehicle_incompatible':\n                var params = event.data;\n\n                // This field will always exist if vehicleInfo is returned\n                if (!params.vin) {\n                  return new Smartcar.VehicleIncompatible(description, null);\n                }\n\n                // These fields are required when vehicleInfo is returned\n                var vehicleInfo = {\n                  vin: params.vin,\n                  make: params.make,\n                  year: Number(params.year)\n                };\n\n                // This field is optional\n                if (params.model) {\n                  vehicleInfo.model = params.model;\n                }\n\n                return new Smartcar.VehicleIncompatible(description, vehicleInfo);\n              default:\n                return new Error('Unexpected error: ' + error + ' - ' + description);\n            }\n          };\n\n          var err = generateError(message.error, message.errorDescription);\n\n          /**\n           * Call `onComplete` with parameters even if developer is not using\n           * a Smartcar-hosted redirect. Regardless of if they are using a\n           * Smartcar-hosted redirect they may still want `onComplete` to do\n           * something with message.\n           *\n           * If empty onComplete is passed, parameters will be harmlessly ignored.\n           *\n           * If a developer chooses to pass an `onComplete` expecting these\n           * parameters they must also handle populating the corresponding query\n           * parameters in their redirect uri.\n           */\n          _this.onComplete(err, message.code, originalState);\n        }\n      };\n\n      // add handler for postMessage event on completion of Smartcar Connect\n      window.addEventListener('message', this.messageHandler);\n    }\n\n    /**\n     * Validate options passed to Smartcar constructor.\n     *\n     * See constructor documentation for enumeration of options properties.\n     *\n     * @private\n     * @param {Object} options - the SDK configuration object\n     */\n\n\n    _createClass(Smartcar, [{\n      key: 'getAuthUrl',\n\n\n      /**\n       * Generates Smartcar OAuth URL.\n       *\n       * @param {Object} options - the link configuration object\n       * @param {String} [options.state] - arbitrary state passed to redirect uri\n       * @param {Boolean} [options.forcePrompt=false] - force permission approval\n       * screen to show on every authentication, even if the user has previously\n       * consented to the exact scope of permission\n       * @param {String} [options.vehicleInfo.make] - `vehicleInfo` is an\n       * object with an optional property `make`, which allows users to bypass the\n       * car brand selection screen. For a complete list of supported brands, please\n       * see our [API Reference](https://smartcar.com/docs/api#authorization)\n       * documentation.\n       * @param {Boolean|Object} [options.singleSelect] - An optional value that sets the\n       * behavior of the grant dialog displayed to the user. If set to `true`,\n       * `single_select` limits the user to selecting only one vehicle. If `single_select`\n       * is passed in as an object with the property `vin`, Smartcar will only authorize\n       * the vehicle with the specified VIN. See the\n       * [API reference](https://smartcar.com/docs/api/#connect-match)\n       * for more information.\n       * @param {String[]} [options.flags] - An optional space-separated list of feature\n       * flags that your application has early access to.\n       *\n       * @return {String} Connect URL to redirect user to.\n       *\n       * @example\n       * https://connect.smartcar.com/oauth/authorize?\n       * response_type=code\n       * &client_id=8229df9f-91a0-4ff0-a1ae-a1f38ee24d07\n       * &scope=read_odometer read_vehicle_info\n       * &redirect_uri=https://example.com/home\n       * &state=0facda3319\n       * &make=TESLA\n       * &single_select=true\n       * &single_select_vin=5YJSA1E14FF101307\n       * &flags=country:DE color:00819D\n       */\n      value: function getAuthUrl(options) {\n        options = options || {};\n\n        var link = '';\n        link += 'https://connect.smartcar.com/oauth/authorize';\n        link += '?response_type=' + this.responseType;\n        link += '&client_id=' + this.clientId;\n        link += '&redirect_uri=' + encodeURIComponent(this.redirectUri);\n\n        // map forcePrompt to approvalPrompt, two options: 'force' and 'auto'\n        var forcePrompt = options.forcePrompt === true;\n        link += '&approval_prompt=' + (forcePrompt ? 'force' : 'auto');\n\n        // If scope is not specified, Smartcar will default to requesting all scopes\n        // from the user\n        if (this.scope) {\n          link += '&scope=' + encodeURIComponent(this.scope.join(' '));\n        }\n\n        link += '&mode=' + this.mode;\n\n        if (options.singleSelect !== undefined && options.singleSelect !== null) {\n          var singleSelectParamAdded = false;\n          if (_typeof(options.singleSelect) === 'object') {\n            var availableParams = ['vin'];\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n              for (var _iterator = availableParams[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var param = _step.value;\n\n                if (param in options.singleSelect) {\n                  link += '&single_select_' + param + '=' + options.singleSelect[param];\n                  singleSelectParamAdded = true;\n                }\n              }\n            } catch (err) {\n              _didIteratorError = true;\n              _iteratorError = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                  _iterator.return();\n                }\n              } finally {\n                if (_didIteratorError) {\n                  throw _iteratorError;\n                }\n              }\n            }\n\n            if (!singleSelectParamAdded) {\n              link += '&single_select=false';\n            } else {\n              link += '&single_select=true';\n            }\n          } else {\n            link += '&single_select=' + (options.singleSelect === true);\n          }\n        }\n\n        // augment state to track the corresponding instance\n        var state = {\n          instanceId: this.instanceId\n        };\n        if (options.state) {\n          state.originalState = options.state;\n        }\n        // convert the augmented state to a base64 string\n        link += '&state=' + window.btoa(JSON.stringify(state));\n\n        if (options.vehicleInfo) {\n          var _availableParams = ['make'];\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = _availableParams[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var _param = _step2.value;\n\n              if (_param in options.vehicleInfo) {\n                link += '&' + _param + '=' + encodeURIComponent(options.vehicleInfo[_param]);\n              }\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n        }\n\n        if (options.flags) {\n          link += '&flags=' + encodeURIComponent(options.flags.join(' '));\n        }\n\n        return link;\n      }\n\n      /**\n       * Launches Smartcar Connect in a new window.\n       *\n       * @param {Object} options - the link configuration object\n       * @param {String} [options.state] - arbitrary state passed to redirect uri\n       * @param {Boolean} [options.forcePrompt=false] - force permission approval\n       * screen to show on every authentication, even if the user has previously\n       * consented to the exact scope of permission\n       * @param {String} [options.vehicleInfo.make] - `vehicleInfo` is an\n       * object with an optional property `make`, which allows users to bypass the\n       * car brand selection screen. For a complete list of supported makes, please\n       * see our [API Reference](https://smartcar.com/docs/api#authorization)\n       * documentation.\n       * @param {Boolean|Object} [options.singleSelect] - An optional value that sets the\n       * behavior of the grant dialog displayed to the user. If set to `true`,\n       * `single_select` limits the user to selecting only one vehicle. If `single_select`\n       * is passed in as an object with the property `vin`, Smartcar will only authorize\n       * the vehicle with the specified VIN. See the\n       * [API reference](https://smartcar.com/docs/api/#connect-match)\n       * for more information.\n       * @param {Object} [options.windowOptions] - the position and dimension settings\n       * of the popup window\n       * @param {String} [options.windowOptions.top] - the top property of\n       * [window features](https://developer.mozilla.org/en-US/docs/Web/API/Window/open#Window_features)\n       * @param {String} [options.windowOptions.left] - the left property of\n       * [window features](https://developer.mozilla.org/en-US/docs/Web/API/Window/open#Window_features)\n       * @param {String} [options.windowOptions.width] - the width property of\n       * [window features](https://developer.mozilla.org/en-US/docs/Web/API/Window/open#Window_features)\n       * @param {String} [options.windowOptions.height] - the height property of\n       * [window features](https://developer.mozilla.org/en-US/docs/Web/API/Window/open#Window_features)\n       */\n\n    }, {\n      key: 'openDialog',\n      value: function openDialog(options) {\n        var windowOptions = Smartcar._getWindowOptions(options.windowOptions || {});\n        var href = this.getAuthUrl(options);\n        window.open(href, 'Connect your car', windowOptions);\n      }\n\n      /**\n       * Adds an on-click event listener to the element with the provided id.\n       *\n       * On-click event calls openDialog when the specified element is clicked.\n       *\n       * @param {Object} options - clickHandler configuration object\n       * @param {String} [options.id] - id of the element to add click handler to\n       * @param {String} [options.selector] - css selector of the element(s) to add click handler to\n       * @param {String} [options.state] - arbitrary state passed to redirect uri\n       * @param {Boolean} [options.forcePrompt=false] - force permission approval\n       * screen to show on every authentication, even if the user has previously\n       * consented to the exact scope of permission\n       * @param {String} [options.vehicleInfo.make] - `vehicleInfo` is an\n       * object with an optional property `make`, which allows users to bypass the\n       * car brand selection screen. For a complete list of supported makes, please\n       * see our [API Reference](https://smartcar.com/docs/api#authorization)\n       * documentation.\n       * @param {Boolean|Object} [options.singleSelect] - An optional value that sets the\n       * behavior of the grant dialog displayed to the user. If set to `true`,\n       * `single_select` limits the user to selecting only one vehicle. If `single_select`\n       * is passed in as an object with the property `vin`, Smartcar will only authorize\n       * the vehicle with the specified VIN. See the\n       * [API reference](https://smartcar.com/docs/api/#connect-match)\n       * for more information.\n       */\n\n    }, {\n      key: 'addClickHandler',\n      value: function addClickHandler(options) {\n        var _this2 = this;\n\n        var id = options.id,\n            selector = options.selector;\n\n        // check if id or selector option exists\n\n        if (!id && !selector) {\n          throw new Error('Could not add click handler: id or selector must be provided.');\n        }\n\n        // find all the DOM elements that match the id and selector\n        var elements = [];\n        if (id) {\n          var element = document.getElementById(id);\n          if (element) {\n            elements.push(element);\n          }\n        }\n        if (selector) {\n          elements.push.apply(elements, _toConsumableArray(document.querySelectorAll(selector)));\n        }\n        if (!elements.length) {\n          throw new Error('\\n        Could not add click handler: element with \\'' + (id || selector) + '\\' was not found.\\n      ');\n        }\n\n        // _elementToClickHandler stores all the element - clickHandler pairs under the same instance\n        // because it is possible to call addClickHandler multiple times with different options\n        if (!this._elementToClickHandler) {\n          this._elementToClickHandler = new Map();\n        }\n        var clickHandler = function clickHandler() {\n          _this2.openDialog(options);\n          // this is equivalent to calling:\n          // event.preventDefault();\n          // event.stopPropogation();\n          return false;\n        };\n\n        elements.forEach(function (element) {\n          // register element - clickHandler pair\n          _this2._elementToClickHandler.set(element, clickHandler);\n          // register eventListener\n          element.addEventListener('click', clickHandler);\n        });\n      }\n\n      /**\n       * Remove Smartcar's event listeners.\n       *\n       * 1. remove listener on the global window object:\n       * The Smartcar SDK uses a global 'message' event listener to recieve the\n       * authorization code from the pop-up dialog. Call this method to remove the\n       * event listener from the global window.\n       *\n       * 2. remove click event listeners on DOM elements\n       * The Smartcar SDK also provides an `addClickHandler` method to attach click\n       * events to DOM elements. These event listeners will also be removed by calling\n       * this `unmount` method.\n       */\n\n    }, {\n      key: 'unmount',\n      value: function unmount() {\n        window.removeEventListener('message', this.messageHandler);\n        if (this._elementToClickHandler) {\n          var _iteratorNormalCompletion3 = true;\n          var _didIteratorError3 = false;\n          var _iteratorError3 = undefined;\n\n          try {\n            for (var _iterator3 = this._elementToClickHandler.entries()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n              var _ref = _step3.value;\n\n              var _ref2 = _slicedToArray(_ref, 2);\n\n              var element = _ref2[0];\n              var clickHandler = _ref2[1];\n\n              element.removeEventListener('click', clickHandler);\n            }\n          } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                _iterator3.return();\n              }\n            } finally {\n              if (_didIteratorError3) {\n                throw _iteratorError3;\n              }\n            }\n          }\n        }\n      }\n    }], [{\n      key: '_validateConstructorOptions',\n      value: function _validateConstructorOptions(options) {\n        if (!options.clientId) {\n          throw new TypeError('A client ID option must be provided');\n        }\n\n        if (!options.redirectUri) {\n          throw new TypeError('A redirect URI option must be provided');\n        }\n\n        if (options.redirectUri.startsWith('https://javascript-sdk.smartcar.com')) {\n          // require onComplete method with at least two parameters (error & code)\n          // when hosting on Smartcar CDN\n          if (!options.onComplete || options.onComplete.length < 2) {\n            throw new Error(\"When using Smartcar's CDN redirect an onComplete function with at\" + ' least 2 parameters (error & code) is required to handle' + ' completion of Connect');\n          }\n\n          var usesOldUriScheme = /redirect-[0-9]+\\.[0-9]+\\.[0-9]+\\?/.test(options.redirectUri);\n\n          if (usesOldUriScheme) {\n            // eslint-disable-next-line no-console\n            console.warn(\"\\nThe Smartcar redirect URI you're using is outdated! To update it, please see:\\nhttps://smartcar.com/docs/guides/new-redirect-uri\\n\");\n          }\n        }\n      }\n\n      /**\n       * Calculate popup window size and position based on current window settings.\n       *\n       * @param {Object} options - the postion and dimention setting of the popup window\n       * @param {String|Number} [options.top] - the top property of\n       * [window features](https://developer.mozilla.org/en-US/docs/Web/API/Window/open#Window_features)\n       * @param {String|Number} [options.left] - the left property of\n       * [window features](https://developer.mozilla.org/en-US/docs/Web/API/Window/open#Window_features)\n       * @param {String|Number} [options.width] - the width property of\n       * [window features](https://developer.mozilla.org/en-US/docs/Web/API/Window/open#Window_features)\n       * the minimum required value is 100.\n       * @param {String|Number} [options.height] - the height property of\n       * [window features](https://developer.mozilla.org/en-US/docs/Web/API/Window/open#Window_features)\n       * the minimum required value is 100.\n       * @private\n       * @return {String} a string of window settings\n       */\n\n    }, {\n      key: '_getWindowOptions',\n      value: function _getWindowOptions(windowOptions) {\n        Object.keys(windowOptions).forEach(function (option) {\n          var numValue = parseFloat(windowOptions[option]);\n          if (isNaN(numValue)) {\n            windowOptions[option] = '';\n          } else if (numValue < 100 && (option === 'width' || option === 'height')) {\n            windowOptions[option] = '100';\n          } else {\n            windowOptions[option] = String(numValue);\n          }\n        });\n\n        // Sets default popup window size as percentage of screen size\n        // Note that this only applies to desktop browsers\n        var windowSettings = {\n          width: window.screen.width * 0.3,\n          height: window.screen.height * 0.75\n        };\n\n        var widthOffset = (window.outerWidth - windowSettings.width) / 2;\n        var heightOffset = (window.outerHeight - windowSettings.height) / 8;\n\n        var options = '';\n        options += 'top=' + (windowOptions.top || window.screenY + heightOffset) + ',';\n        options += 'left=' + (windowOptions.left || window.screenX + widthOffset) + ',';\n        options += 'width=' + (windowOptions.width || windowSettings.width) + ',';\n        options += 'height=' + (windowOptions.height || windowSettings.height) + ',';\n\n        return options;\n      }\n    }]);\n\n    return Smartcar;\n  }();\n\n  /**\n   * Access denied error returned by Connect.\n   *\n   * @extends Error\n   */\n\n\n  Smartcar.AccessDenied = function (_Error) {\n    _inherits(_class, _Error);\n\n    /**\n     * @param {String} message - detailed error description\n     */\n    function _class(message) {\n      _classCallCheck(this, _class);\n\n      var _this3 = _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).call(this, message));\n\n      _this3.name = 'AccessDenied';\n      return _this3;\n    }\n\n    return _class;\n  }(Error);\n\n  /**\n   * Vehicle incompatible error returned by Connect. Will optionally\n   * have a vehicleInfo object if the user chooses to give permissions to provide\n   * that information. See our [Connect documentation](https://smartcar.com/docs/api#smartcar-connect)\n   * for more details.\n   *\n   * @extends Error\n   */\n  Smartcar.VehicleIncompatible = function (_Error2) {\n    _inherits(_class2, _Error2);\n\n    /**\n     * @param {String} message - detailed error description\n     * @param {?Object} vehicleInfo - If a vehicle is incompatible, the user has\n     * the option to return vehicleInfo to the application.\n     * @param {String} vehicleInfo.vin - returned if user gives permission.\n     * @param {String} vehicleInfo.make - returned if user gives permission.\n     * @param {Number} vehicleInfo.year - returned if user gives permission.\n     * @param {String} [vehicleInfo.model] - optionally returned if user gives permission.\n     */\n    function _class2(message, vehicleInfo) {\n      _classCallCheck(this, _class2);\n\n      var _this4 = _possibleConstructorReturn(this, (_class2.__proto__ || Object.getPrototypeOf(_class2)).call(this, message));\n\n      _this4.name = 'VehicleIncompatible';\n      _this4.vehicleInfo = vehicleInfo;\n      return _this4;\n    }\n\n    return _class2;\n  }(Error);\n\n  /**\n   * Invalid subscription error returned by Connect.\n   *\n   * @extends Error\n   */\n  Smartcar.InvalidSubscription = function (_Error3) {\n    _inherits(_class3, _Error3);\n\n    /**\n     * @param {String} message - detailed error description\n     */\n    function _class3(message) {\n      _classCallCheck(this, _class3);\n\n      var _this5 = _possibleConstructorReturn(this, (_class3.__proto__ || Object.getPrototypeOf(_class3)).call(this, message));\n\n      _this5.name = 'InvalidSubscription';\n      return _this5;\n    }\n\n    return _class3;\n  }(Error);\n\n  return Smartcar;\n});"]},"metadata":{},"sourceType":"script"}